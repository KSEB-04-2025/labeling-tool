name: Build & Deploy Classifier

on:
  push:
    branches: [ main ]
    paths:
      - '*.py'
      - '**/*.py'
      - 'requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/classifier:latest

      - name: SSH Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -euo pipefail

            mkdir -p ~/classifier-data/keys

            # Base64 로 넣어둔 서비스계정 키 복원
            echo "${{ secrets.GCP_SA_JSON_B64 }}" | base64 -d > ~/classifier-data/keys/gcp.json

            # env 파일 생성 (heredoc 대신 중괄호 블록)
            {
              echo "MONGO_URI=${{ secrets.MONGO_URI }}";
              echo "GCS_BUCKET=zezeone_images";
              echo "GCS_SUBDIR=grade";
              echo "GOOGLE_APPLICATION_CREDENTIALS=/keys/gcp.json";
            } > ~/classifier-data/classifier.env

            # 네트워크 없으면 생성 (옵션)
            docker network inspect backend_app-network >/dev/null 2>&1 || \
              docker network create backend_app-network

            docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/classifier:latest || true

            docker stop classifier || true
            docker rm   classifier || true

            docker run -d --name classifier \
              --restart unless-stopped \
              --network backend_app-network \
              --env-file ~/classifier-data/classifier.env \
              -v ~/classifier-data/keys/gcp.json:/keys/gcp.json:ro \
              -p 8100:8000 \
              docker.io/${{ secrets.DOCKER_USERNAME }}/classifier:latest
